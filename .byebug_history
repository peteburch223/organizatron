exit
@params.has_key?(:tags)
@params.has_key?(:action)
@params.has_key?(:one)
@params[:action].exists?
@params[:action].exist?
@params[:action].exist@
@params[:action]
@params[:action].exists?
@params[:action]
@params[action]
@params
exit
!!nil
!!@params[:tags]
@params[:tags]
@params
params
exit
c
exit
MaterialTagLink.where(material_id: shared_material_ids).map(&:id)
MaterialTagLink.where(material_id: shared_material_ids)
exit
<<<<<<< HEAD
=======
temp
temp.merge(Material.find(material_id).slice(:title, :link_url, :description))
Material.find(material_id).slice(:title, :link_url, :description)
temp = Material.find(material_id).slice(:link_url, :title)
temp = Material.find(material_id).slice(:link_url)
temp = Material.find(material_id)
Material.find(material_id).select {|k,v| [:link_url, :title, :description].include? k }
Material.find(material_id).only(:title, :link_url, :description)
Material.find(material_id)
exit
ObjectSpace.each_object(ConsolidatedData).count
c
exit
params.require(:tags).split(",")
params
exit
params
exit
paramsexit
params
>>>>>>> 5397606db62fe9635184be3ba2d6c912917befde
c
material_params_for_create
c
material_params_for_create
c
material_params_for_create
tags = params['tags']
params['tags']
params
tags
exit
material_1.tags.first.material_tag_links.first.votes.sum(:value)
material_1.tags.first.material_tag_links
material_1.tags.first
exit
material_3.material_tag_links
material_3
exit
material_1.tags.first.votes.sum(:value)
material_1_tags
exit
material_1.tags.first.votes.sum(:value)
material_1.tags.first.votes
material_1.tags.first
material_1_tags
exit
material_1.tags.first
material_1.tags.first.id
material_1.tags.first.tag
material_1.tags.first
material_1.tags.all
material_1.tags.methods.sort
material_1.tags.CollectionProxy
material_1.tags.tags
material_1.tags
material_1.tags.tag
material_1.tags
exit
n
materials
n
exit
material_ids
n
exit
result
exit
material_tag_link_ids
n
exit
n
exit
material_tag_link_ids
exit
result
exit
Vote.all
result
exit
result
exit
result
exit
MaterialTagLink.find(mtl_id).votes.sum(:value)
MaterialTagLink.find(mtl_id).votes.sum
MaterialTagLink.find(mtl_id).votes
MaterialTagLink.find(mtl_id).tag.name
MaterialTagLink.find(mtl_id).tag.id
MaterialTagLink.find(mtl_id).tag
MaterialTagLink.find(mtl_id)
exit
n
exit
Material.first.votes
material_tag_link_ids = linked_materials_from tag_ids
vote_count_for material_tag_link_ids
MaterialTagLink.first.votes
MaterialTagLink.all
Material.first.votes
Vote.all
Tag.all
Material.all
exit
materials.first.votes.sum(:value)
materials.first.votes.sum
materials.first.votes
materials.first.tags
materials.tags
materials
n
Vote.all
material_tag_link_ids
exit
Vote.all
material_tag_link_ids
exit
Vote.all
material_tag_link_ids
exit
Material.first.votes
Vote.all
Votes.all
exit
rand(3)
rand(2)
material.first.votes
material = Material.all
mtl.first.votes
mtl.first.vote
mtl.first.tag
mtl.first.all
mtl = MaterialTagLink.all
vote = Vote.all
Material.methods.all
material.tags
material.material_tag_links
material.methods.sort
material = Material.all
c
arr1-arr2
arr2 = ['a','c','d']
arr1 = ['a','b','c','d']
arr1
arr1-arr2
arr2 = [2,3,4]
arr1 = [1,2,3,4]
Material.first.tags
c
MaterialTagLink.where(tag_id: [1,4])c
MaterialTagLink.where(tag_id: [1,4])
MaterialTagLink.where(tag_id: [2,4])
MaterialTagLink.where(tag_id: 2)
MaterialTagLink.find_all(tag_id: 2)
MaterialTagLink.find_by(:all, tag_id: 2)
MaterialTagLink.find_by(tag_id: 2)
MaterialTagLink.first(tag_id: 2)
MaterialTagLink.all
MaterialTagLink.find_by(tag_id: 4)
MaterialTagLink.first(tag_id: 4)
MaterialTagLink.first
MaterialTagLink
c
Tag.find_by name: "Angular"
Tag.all
Tag
tag
Tag
c
Material.all.last.tagsc
Material.all.last.tags
Material.all.last.tag
Material.all.last
Material.all
MaterialTagLink.all
c
Material.all.first
Material.all.last
Material.all.first
Material.all
c
cc
response.body
expected_result
material
material_tag_link
exit
params
exit
params
exit
params
exit
Vote.all
vote.save
Vote.all
c
run
n
exit
eit
n
exit
mtl.first.votes
mtl.vote
mtl
exit
MaterialTagLink.all.select {|e| e.tag_id == 5 }
mtl
mtl.columns_hash
mtl.methods.columns_hash
mtl.methods.sort
mtl.methods
mtlmethods
mtl.material_id.methods
mtl.material_id
mtl = MaterialTagLink.where("material_id= 5 AND tag_id = 5")
MaterialTagLink.where("material_id= 5 AND tag_id = 5")
MaterialTagLink.where(material_id= 5 AND tag_id = 5)
MaterialTagLink.where(material_id= 5)
MaterialTagLink.find_by material_id: 5
MaterialTagLink.find_by material_id = 5
MaterialTagLink.find_by material_id: 5
MaterialTagLink.all
MaterialTagLink.find_by material_id: 5
MaterialTagLink.where(material_id= 5)
MaterialTagLink.where(material_id: 5)
MaterialTagLink.where(material_id= 5)
MaterialTagLink.first(material_id: 5)
MaterialTagLink.first
